Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> instruccion
Rule 2     programa -> programa instruccion
Rule 3     instruccion -> asignacion
Rule 4     instruccion -> ciclo
Rule 5     asignacion -> VARIABLE ASIGNACION expr
Rule 6     ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque
Rule 7     bloque -> PARENTESIS_IZQ programa PARENTESIS_DER
Rule 8     condicion -> VARIABLE MENOR_IGUAL expr
Rule 9     condicion -> VARIABLE MAYOR_IGUAL expr
Rule 10    condicion -> VARIABLE IGUAL expr
Rule 11    condicion -> VARIABLE DIFERENTE expr
Rule 12    condicion -> VARIABLE MENOR expr
Rule 13    condicion -> VARIABLE MAYOR expr
Rule 14    expr -> expr MAS term
Rule 15    expr -> expr MENOS term
Rule 16    expr -> term
Rule 17    term -> term MULTIPLICACION factor
Rule 18    term -> term DIVISION factor
Rule 19    term -> factor
Rule 20    factor -> NUMERO_ENTERO
Rule 21    factor -> NUMERO_FLOTANTE
Rule 22    factor -> VARIABLE

Terminals, with rules where they appear

ASIGNACION           : 5
COMENTARIO           : 
DIFERENTE            : 11
DIVISION             : 18
IGUAL                : 10
MAS                  : 14
MAYOR                : 13
MAYOR_IGUAL          : 9
MENOR                : 12
MENOR_IGUAL          : 8
MENOS                : 15
MULTIPLICACION       : 17
NUMERO_ENTERO        : 20
NUMERO_FLOTANTE      : 21
PALABRA_RESERVADA    : 6
PARENTESIS_DER       : 6 7
PARENTESIS_IZQ       : 6 7
VARIABLE             : 5 8 9 10 11 12 13 22
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
bloque               : 6
ciclo                : 4
condicion            : 6
expr                 : 5 8 9 10 11 12 13 14 15
factor               : 17 18 19
instruccion          : 1 2
programa             : 2 7 0
term                 : 14 15 16 17 18

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . instruccion
    (2) programa -> . programa instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    programa                       shift and go to state 1
    instruccion                    shift and go to state 2
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 1

    (0) S' -> programa .
    (2) programa -> programa . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 2

    (1) programa -> instruccion .

    VARIABLE        reduce using rule 1 (programa -> instruccion .)
    PALABRA_RESERVADA reduce using rule 1 (programa -> instruccion .)
    $end            reduce using rule 1 (programa -> instruccion .)
    PARENTESIS_DER  reduce using rule 1 (programa -> instruccion .)


state 3

    (3) instruccion -> asignacion .

    VARIABLE        reduce using rule 3 (instruccion -> asignacion .)
    PALABRA_RESERVADA reduce using rule 3 (instruccion -> asignacion .)
    $end            reduce using rule 3 (instruccion -> asignacion .)
    PARENTESIS_DER  reduce using rule 3 (instruccion -> asignacion .)


state 4

    (4) instruccion -> ciclo .

    VARIABLE        reduce using rule 4 (instruccion -> ciclo .)
    PALABRA_RESERVADA reduce using rule 4 (instruccion -> ciclo .)
    $end            reduce using rule 4 (instruccion -> ciclo .)
    PARENTESIS_DER  reduce using rule 4 (instruccion -> ciclo .)


state 5

    (5) asignacion -> VARIABLE . ASIGNACION expr

    ASIGNACION      shift and go to state 8


state 6

    (6) ciclo -> PALABRA_RESERVADA . PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    PARENTESIS_IZQ  shift and go to state 9


state 7

    (2) programa -> programa instruccion .

    VARIABLE        reduce using rule 2 (programa -> programa instruccion .)
    PALABRA_RESERVADA reduce using rule 2 (programa -> programa instruccion .)
    $end            reduce using rule 2 (programa -> programa instruccion .)
    PARENTESIS_DER  reduce using rule 2 (programa -> programa instruccion .)


state 8

    (5) asignacion -> VARIABLE ASIGNACION . expr
    (14) expr -> . expr MAS term
    (15) expr -> . expr MENOS term
    (16) expr -> . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 9

    (6) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ . condicion PARENTESIS_DER bloque
    (8) condicion -> . VARIABLE MENOR_IGUAL expr
    (9) condicion -> . VARIABLE MAYOR_IGUAL expr
    (10) condicion -> . VARIABLE IGUAL expr
    (11) condicion -> . VARIABLE DIFERENTE expr
    (12) condicion -> . VARIABLE MENOR expr
    (13) condicion -> . VARIABLE MAYOR expr

    VARIABLE        shift and go to state 17

    condicion                      shift and go to state 16

state 10

    (22) factor -> VARIABLE .

    MULTIPLICACION  reduce using rule 22 (factor -> VARIABLE .)
    DIVISION        reduce using rule 22 (factor -> VARIABLE .)
    MAS             reduce using rule 22 (factor -> VARIABLE .)
    MENOS           reduce using rule 22 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 22 (factor -> VARIABLE .)
    PALABRA_RESERVADA reduce using rule 22 (factor -> VARIABLE .)
    $end            reduce using rule 22 (factor -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 22 (factor -> VARIABLE .)


state 11

    (5) asignacion -> VARIABLE ASIGNACION expr .
    (14) expr -> expr . MAS term
    (15) expr -> expr . MENOS term

    VARIABLE        reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    PALABRA_RESERVADA reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    $end            reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    PARENTESIS_DER  reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 12

    (16) expr -> term .
    (17) term -> term . MULTIPLICACION factor
    (18) term -> term . DIVISION factor

    MAS             reduce using rule 16 (expr -> term .)
    MENOS           reduce using rule 16 (expr -> term .)
    VARIABLE        reduce using rule 16 (expr -> term .)
    PALABRA_RESERVADA reduce using rule 16 (expr -> term .)
    $end            reduce using rule 16 (expr -> term .)
    PARENTESIS_DER  reduce using rule 16 (expr -> term .)
    MULTIPLICACION  shift and go to state 20
    DIVISION        shift and go to state 21


state 13

    (19) term -> factor .

    MULTIPLICACION  reduce using rule 19 (term -> factor .)
    DIVISION        reduce using rule 19 (term -> factor .)
    MAS             reduce using rule 19 (term -> factor .)
    MENOS           reduce using rule 19 (term -> factor .)
    VARIABLE        reduce using rule 19 (term -> factor .)
    PALABRA_RESERVADA reduce using rule 19 (term -> factor .)
    $end            reduce using rule 19 (term -> factor .)
    PARENTESIS_DER  reduce using rule 19 (term -> factor .)


state 14

    (20) factor -> NUMERO_ENTERO .

    MULTIPLICACION  reduce using rule 20 (factor -> NUMERO_ENTERO .)
    DIVISION        reduce using rule 20 (factor -> NUMERO_ENTERO .)
    MAS             reduce using rule 20 (factor -> NUMERO_ENTERO .)
    MENOS           reduce using rule 20 (factor -> NUMERO_ENTERO .)
    VARIABLE        reduce using rule 20 (factor -> NUMERO_ENTERO .)
    PALABRA_RESERVADA reduce using rule 20 (factor -> NUMERO_ENTERO .)
    $end            reduce using rule 20 (factor -> NUMERO_ENTERO .)
    PARENTESIS_DER  reduce using rule 20 (factor -> NUMERO_ENTERO .)


state 15

    (21) factor -> NUMERO_FLOTANTE .

    MULTIPLICACION  reduce using rule 21 (factor -> NUMERO_FLOTANTE .)
    DIVISION        reduce using rule 21 (factor -> NUMERO_FLOTANTE .)
    MAS             reduce using rule 21 (factor -> NUMERO_FLOTANTE .)
    MENOS           reduce using rule 21 (factor -> NUMERO_FLOTANTE .)
    VARIABLE        reduce using rule 21 (factor -> NUMERO_FLOTANTE .)
    PALABRA_RESERVADA reduce using rule 21 (factor -> NUMERO_FLOTANTE .)
    $end            reduce using rule 21 (factor -> NUMERO_FLOTANTE .)
    PARENTESIS_DER  reduce using rule 21 (factor -> NUMERO_FLOTANTE .)


state 16

    (6) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion . PARENTESIS_DER bloque

    PARENTESIS_DER  shift and go to state 22


state 17

    (8) condicion -> VARIABLE . MENOR_IGUAL expr
    (9) condicion -> VARIABLE . MAYOR_IGUAL expr
    (10) condicion -> VARIABLE . IGUAL expr
    (11) condicion -> VARIABLE . DIFERENTE expr
    (12) condicion -> VARIABLE . MENOR expr
    (13) condicion -> VARIABLE . MAYOR expr

    MENOR_IGUAL     shift and go to state 23
    MAYOR_IGUAL     shift and go to state 24
    IGUAL           shift and go to state 25
    DIFERENTE       shift and go to state 26
    MENOR           shift and go to state 27
    MAYOR           shift and go to state 28


state 18

    (14) expr -> expr MAS . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    term                           shift and go to state 29
    factor                         shift and go to state 13

state 19

    (15) expr -> expr MENOS . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    term                           shift and go to state 30
    factor                         shift and go to state 13

state 20

    (17) term -> term MULTIPLICACION . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    factor                         shift and go to state 31

state 21

    (18) term -> term DIVISION . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    factor                         shift and go to state 32

state 22

    (6) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER . bloque
    (7) bloque -> . PARENTESIS_IZQ programa PARENTESIS_DER

    PARENTESIS_IZQ  shift and go to state 33

    bloque                         shift and go to state 34

state 23

    (8) condicion -> VARIABLE MENOR_IGUAL . expr
    (14) expr -> . expr MAS term
    (15) expr -> . expr MENOS term
    (16) expr -> . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 35
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 24

    (9) condicion -> VARIABLE MAYOR_IGUAL . expr
    (14) expr -> . expr MAS term
    (15) expr -> . expr MENOS term
    (16) expr -> . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 36
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 25

    (10) condicion -> VARIABLE IGUAL . expr
    (14) expr -> . expr MAS term
    (15) expr -> . expr MENOS term
    (16) expr -> . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 37
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 26

    (11) condicion -> VARIABLE DIFERENTE . expr
    (14) expr -> . expr MAS term
    (15) expr -> . expr MENOS term
    (16) expr -> . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 38
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 27

    (12) condicion -> VARIABLE MENOR . expr
    (14) expr -> . expr MAS term
    (15) expr -> . expr MENOS term
    (16) expr -> . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 39
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 28

    (13) condicion -> VARIABLE MAYOR . expr
    (14) expr -> . expr MAS term
    (15) expr -> . expr MENOS term
    (16) expr -> . term
    (17) term -> . term MULTIPLICACION factor
    (18) term -> . term DIVISION factor
    (19) term -> . factor
    (20) factor -> . NUMERO_ENTERO
    (21) factor -> . NUMERO_FLOTANTE
    (22) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 14
    NUMERO_FLOTANTE shift and go to state 15
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 40
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 29

    (14) expr -> expr MAS term .
    (17) term -> term . MULTIPLICACION factor
    (18) term -> term . DIVISION factor

    MAS             reduce using rule 14 (expr -> expr MAS term .)
    MENOS           reduce using rule 14 (expr -> expr MAS term .)
    VARIABLE        reduce using rule 14 (expr -> expr MAS term .)
    PALABRA_RESERVADA reduce using rule 14 (expr -> expr MAS term .)
    $end            reduce using rule 14 (expr -> expr MAS term .)
    PARENTESIS_DER  reduce using rule 14 (expr -> expr MAS term .)
    MULTIPLICACION  shift and go to state 20
    DIVISION        shift and go to state 21


state 30

    (15) expr -> expr MENOS term .
    (17) term -> term . MULTIPLICACION factor
    (18) term -> term . DIVISION factor

    MAS             reduce using rule 15 (expr -> expr MENOS term .)
    MENOS           reduce using rule 15 (expr -> expr MENOS term .)
    VARIABLE        reduce using rule 15 (expr -> expr MENOS term .)
    PALABRA_RESERVADA reduce using rule 15 (expr -> expr MENOS term .)
    $end            reduce using rule 15 (expr -> expr MENOS term .)
    PARENTESIS_DER  reduce using rule 15 (expr -> expr MENOS term .)
    MULTIPLICACION  shift and go to state 20
    DIVISION        shift and go to state 21


state 31

    (17) term -> term MULTIPLICACION factor .

    MULTIPLICACION  reduce using rule 17 (term -> term MULTIPLICACION factor .)
    DIVISION        reduce using rule 17 (term -> term MULTIPLICACION factor .)
    MAS             reduce using rule 17 (term -> term MULTIPLICACION factor .)
    MENOS           reduce using rule 17 (term -> term MULTIPLICACION factor .)
    VARIABLE        reduce using rule 17 (term -> term MULTIPLICACION factor .)
    PALABRA_RESERVADA reduce using rule 17 (term -> term MULTIPLICACION factor .)
    $end            reduce using rule 17 (term -> term MULTIPLICACION factor .)
    PARENTESIS_DER  reduce using rule 17 (term -> term MULTIPLICACION factor .)


state 32

    (18) term -> term DIVISION factor .

    MULTIPLICACION  reduce using rule 18 (term -> term DIVISION factor .)
    DIVISION        reduce using rule 18 (term -> term DIVISION factor .)
    MAS             reduce using rule 18 (term -> term DIVISION factor .)
    MENOS           reduce using rule 18 (term -> term DIVISION factor .)
    VARIABLE        reduce using rule 18 (term -> term DIVISION factor .)
    PALABRA_RESERVADA reduce using rule 18 (term -> term DIVISION factor .)
    $end            reduce using rule 18 (term -> term DIVISION factor .)
    PARENTESIS_DER  reduce using rule 18 (term -> term DIVISION factor .)


state 33

    (7) bloque -> PARENTESIS_IZQ . programa PARENTESIS_DER
    (1) programa -> . instruccion
    (2) programa -> . programa instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    programa                       shift and go to state 41
    instruccion                    shift and go to state 2
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 34

    (6) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .

    VARIABLE        reduce using rule 6 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)
    PALABRA_RESERVADA reduce using rule 6 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)
    $end            reduce using rule 6 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)
    PARENTESIS_DER  reduce using rule 6 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)


state 35

    (8) condicion -> VARIABLE MENOR_IGUAL expr .
    (14) expr -> expr . MAS term
    (15) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 8 (condicion -> VARIABLE MENOR_IGUAL expr .)
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 36

    (9) condicion -> VARIABLE MAYOR_IGUAL expr .
    (14) expr -> expr . MAS term
    (15) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 9 (condicion -> VARIABLE MAYOR_IGUAL expr .)
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 37

    (10) condicion -> VARIABLE IGUAL expr .
    (14) expr -> expr . MAS term
    (15) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 10 (condicion -> VARIABLE IGUAL expr .)
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 38

    (11) condicion -> VARIABLE DIFERENTE expr .
    (14) expr -> expr . MAS term
    (15) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 11 (condicion -> VARIABLE DIFERENTE expr .)
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 39

    (12) condicion -> VARIABLE MENOR expr .
    (14) expr -> expr . MAS term
    (15) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 12 (condicion -> VARIABLE MENOR expr .)
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 40

    (13) condicion -> VARIABLE MAYOR expr .
    (14) expr -> expr . MAS term
    (15) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 13 (condicion -> VARIABLE MAYOR expr .)
    MAS             shift and go to state 18
    MENOS           shift and go to state 19


state 41

    (7) bloque -> PARENTESIS_IZQ programa . PARENTESIS_DER
    (2) programa -> programa . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    PARENTESIS_DER  shift and go to state 42
    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 42

    (7) bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .

    VARIABLE        reduce using rule 7 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)
    PALABRA_RESERVADA reduce using rule 7 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)
    $end            reduce using rule 7 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 7 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)

