Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> instruccion
Rule 2     programa -> programa instruccion
Rule 3     instruccion -> asignacion
Rule 4     instruccion -> ciclo
Rule 5     asignacion -> VARIABLE ASIGNACION expr
Rule 6     asignacion -> VARIABLE ASIGNACION error
Rule 7     ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque
Rule 8     condicion -> VARIABLE MENOR_IGUAL expr
Rule 9     condicion -> VARIABLE MAYOR_IGUAL expr
Rule 10    condicion -> VARIABLE IGUAL expr
Rule 11    condicion -> VARIABLE DIFERENTE expr
Rule 12    condicion -> VARIABLE MENOR expr
Rule 13    condicion -> VARIABLE MAYOR expr
Rule 14    condicion -> VARIABLE error
Rule 15    bloque -> PARENTESIS_IZQ programa PARENTESIS_DER
Rule 16    bloque -> PARENTESIS_IZQ error
Rule 17    expr -> expr MAS term
Rule 18    expr -> expr MENOS term
Rule 19    expr -> term
Rule 20    term -> term MULTIPLICACION factor
Rule 21    term -> term DIVISION factor
Rule 22    term -> factor
Rule 23    factor -> NUMERO_ENTERO
Rule 24    factor -> NUMERO_FLOTANTE
Rule 25    factor -> VARIABLE

Terminals, with rules where they appear

ASIGNACION           : 5 6
COMENTARIO           : 
DIFERENTE            : 11
DIVISION             : 21
IGUAL                : 10
MAS                  : 17
MAYOR                : 13
MAYOR_IGUAL          : 9
MENOR                : 12
MENOR_IGUAL          : 8
MENOS                : 18
MULTIPLICACION       : 20
NUMERO_ENTERO        : 23
NUMERO_FLOTANTE      : 24
PALABRA_RESERVADA    : 7
PARENTESIS_DER       : 7 15
PARENTESIS_IZQ       : 7 15 16
VARIABLE             : 5 6 8 9 10 11 12 13 14 25
error                : 6 14 16

Nonterminals, with rules where they appear

asignacion           : 3
bloque               : 7
ciclo                : 4
condicion            : 7
expr                 : 5 8 9 10 11 12 13 17 18
factor               : 20 21 22
instruccion          : 1 2
programa             : 2 15 0
term                 : 17 18 19 20 21

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . instruccion
    (2) programa -> . programa instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) asignacion -> . VARIABLE ASIGNACION error
    (7) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    programa                       shift and go to state 1
    instruccion                    shift and go to state 2
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 1

    (0) S' -> programa .
    (2) programa -> programa . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) asignacion -> . VARIABLE ASIGNACION error
    (7) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 2

    (1) programa -> instruccion .

    VARIABLE        reduce using rule 1 (programa -> instruccion .)
    PALABRA_RESERVADA reduce using rule 1 (programa -> instruccion .)
    $end            reduce using rule 1 (programa -> instruccion .)
    PARENTESIS_DER  reduce using rule 1 (programa -> instruccion .)


state 3

    (3) instruccion -> asignacion .

    VARIABLE        reduce using rule 3 (instruccion -> asignacion .)
    PALABRA_RESERVADA reduce using rule 3 (instruccion -> asignacion .)
    $end            reduce using rule 3 (instruccion -> asignacion .)
    PARENTESIS_DER  reduce using rule 3 (instruccion -> asignacion .)


state 4

    (4) instruccion -> ciclo .

    VARIABLE        reduce using rule 4 (instruccion -> ciclo .)
    PALABRA_RESERVADA reduce using rule 4 (instruccion -> ciclo .)
    $end            reduce using rule 4 (instruccion -> ciclo .)
    PARENTESIS_DER  reduce using rule 4 (instruccion -> ciclo .)


state 5

    (5) asignacion -> VARIABLE . ASIGNACION expr
    (6) asignacion -> VARIABLE . ASIGNACION error

    ASIGNACION      shift and go to state 8


state 6

    (7) ciclo -> PALABRA_RESERVADA . PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    PARENTESIS_IZQ  shift and go to state 9


state 7

    (2) programa -> programa instruccion .

    VARIABLE        reduce using rule 2 (programa -> programa instruccion .)
    PALABRA_RESERVADA reduce using rule 2 (programa -> programa instruccion .)
    $end            reduce using rule 2 (programa -> programa instruccion .)
    PARENTESIS_DER  reduce using rule 2 (programa -> programa instruccion .)


state 8

    (5) asignacion -> VARIABLE ASIGNACION . expr
    (6) asignacion -> VARIABLE ASIGNACION . error
    (17) expr -> . expr MAS term
    (18) expr -> . expr MENOS term
    (19) expr -> . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    error           shift and go to state 12
    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 11
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 9

    (7) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ . condicion PARENTESIS_DER bloque
    (8) condicion -> . VARIABLE MENOR_IGUAL expr
    (9) condicion -> . VARIABLE MAYOR_IGUAL expr
    (10) condicion -> . VARIABLE IGUAL expr
    (11) condicion -> . VARIABLE DIFERENTE expr
    (12) condicion -> . VARIABLE MENOR expr
    (13) condicion -> . VARIABLE MAYOR expr
    (14) condicion -> . VARIABLE error

    VARIABLE        shift and go to state 18

    condicion                      shift and go to state 17

state 10

    (25) factor -> VARIABLE .

    MULTIPLICACION  reduce using rule 25 (factor -> VARIABLE .)
    DIVISION        reduce using rule 25 (factor -> VARIABLE .)
    MAS             reduce using rule 25 (factor -> VARIABLE .)
    MENOS           reduce using rule 25 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 25 (factor -> VARIABLE .)
    PALABRA_RESERVADA reduce using rule 25 (factor -> VARIABLE .)
    $end            reduce using rule 25 (factor -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 25 (factor -> VARIABLE .)


state 11

    (5) asignacion -> VARIABLE ASIGNACION expr .
    (17) expr -> expr . MAS term
    (18) expr -> expr . MENOS term

    VARIABLE        reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    PALABRA_RESERVADA reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    $end            reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    PARENTESIS_DER  reduce using rule 5 (asignacion -> VARIABLE ASIGNACION expr .)
    MAS             shift and go to state 19
    MENOS           shift and go to state 20


state 12

    (6) asignacion -> VARIABLE ASIGNACION error .

    VARIABLE        reduce using rule 6 (asignacion -> VARIABLE ASIGNACION error .)
    PALABRA_RESERVADA reduce using rule 6 (asignacion -> VARIABLE ASIGNACION error .)
    $end            reduce using rule 6 (asignacion -> VARIABLE ASIGNACION error .)
    PARENTESIS_DER  reduce using rule 6 (asignacion -> VARIABLE ASIGNACION error .)


state 13

    (19) expr -> term .
    (20) term -> term . MULTIPLICACION factor
    (21) term -> term . DIVISION factor

    MAS             reduce using rule 19 (expr -> term .)
    MENOS           reduce using rule 19 (expr -> term .)
    VARIABLE        reduce using rule 19 (expr -> term .)
    PALABRA_RESERVADA reduce using rule 19 (expr -> term .)
    $end            reduce using rule 19 (expr -> term .)
    PARENTESIS_DER  reduce using rule 19 (expr -> term .)
    MULTIPLICACION  shift and go to state 21
    DIVISION        shift and go to state 22


state 14

    (22) term -> factor .

    MULTIPLICACION  reduce using rule 22 (term -> factor .)
    DIVISION        reduce using rule 22 (term -> factor .)
    MAS             reduce using rule 22 (term -> factor .)
    MENOS           reduce using rule 22 (term -> factor .)
    VARIABLE        reduce using rule 22 (term -> factor .)
    PALABRA_RESERVADA reduce using rule 22 (term -> factor .)
    $end            reduce using rule 22 (term -> factor .)
    PARENTESIS_DER  reduce using rule 22 (term -> factor .)


state 15

    (23) factor -> NUMERO_ENTERO .

    MULTIPLICACION  reduce using rule 23 (factor -> NUMERO_ENTERO .)
    DIVISION        reduce using rule 23 (factor -> NUMERO_ENTERO .)
    MAS             reduce using rule 23 (factor -> NUMERO_ENTERO .)
    MENOS           reduce using rule 23 (factor -> NUMERO_ENTERO .)
    VARIABLE        reduce using rule 23 (factor -> NUMERO_ENTERO .)
    PALABRA_RESERVADA reduce using rule 23 (factor -> NUMERO_ENTERO .)
    $end            reduce using rule 23 (factor -> NUMERO_ENTERO .)
    PARENTESIS_DER  reduce using rule 23 (factor -> NUMERO_ENTERO .)


state 16

    (24) factor -> NUMERO_FLOTANTE .

    MULTIPLICACION  reduce using rule 24 (factor -> NUMERO_FLOTANTE .)
    DIVISION        reduce using rule 24 (factor -> NUMERO_FLOTANTE .)
    MAS             reduce using rule 24 (factor -> NUMERO_FLOTANTE .)
    MENOS           reduce using rule 24 (factor -> NUMERO_FLOTANTE .)
    VARIABLE        reduce using rule 24 (factor -> NUMERO_FLOTANTE .)
    PALABRA_RESERVADA reduce using rule 24 (factor -> NUMERO_FLOTANTE .)
    $end            reduce using rule 24 (factor -> NUMERO_FLOTANTE .)
    PARENTESIS_DER  reduce using rule 24 (factor -> NUMERO_FLOTANTE .)


state 17

    (7) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion . PARENTESIS_DER bloque

    PARENTESIS_DER  shift and go to state 23


state 18

    (8) condicion -> VARIABLE . MENOR_IGUAL expr
    (9) condicion -> VARIABLE . MAYOR_IGUAL expr
    (10) condicion -> VARIABLE . IGUAL expr
    (11) condicion -> VARIABLE . DIFERENTE expr
    (12) condicion -> VARIABLE . MENOR expr
    (13) condicion -> VARIABLE . MAYOR expr
    (14) condicion -> VARIABLE . error

    MENOR_IGUAL     shift and go to state 24
    MAYOR_IGUAL     shift and go to state 25
    IGUAL           shift and go to state 26
    DIFERENTE       shift and go to state 27
    MENOR           shift and go to state 28
    MAYOR           shift and go to state 29
    error           shift and go to state 30


state 19

    (17) expr -> expr MAS . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    term                           shift and go to state 31
    factor                         shift and go to state 14

state 20

    (18) expr -> expr MENOS . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    term                           shift and go to state 32
    factor                         shift and go to state 14

state 21

    (20) term -> term MULTIPLICACION . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    factor                         shift and go to state 33

state 22

    (21) term -> term DIVISION . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    factor                         shift and go to state 34

state 23

    (7) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER . bloque
    (15) bloque -> . PARENTESIS_IZQ programa PARENTESIS_DER
    (16) bloque -> . PARENTESIS_IZQ error

    PARENTESIS_IZQ  shift and go to state 35

    bloque                         shift and go to state 36

state 24

    (8) condicion -> VARIABLE MENOR_IGUAL . expr
    (17) expr -> . expr MAS term
    (18) expr -> . expr MENOS term
    (19) expr -> . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 37
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 25

    (9) condicion -> VARIABLE MAYOR_IGUAL . expr
    (17) expr -> . expr MAS term
    (18) expr -> . expr MENOS term
    (19) expr -> . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 38
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 26

    (10) condicion -> VARIABLE IGUAL . expr
    (17) expr -> . expr MAS term
    (18) expr -> . expr MENOS term
    (19) expr -> . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 39
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 27

    (11) condicion -> VARIABLE DIFERENTE . expr
    (17) expr -> . expr MAS term
    (18) expr -> . expr MENOS term
    (19) expr -> . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 40
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 28

    (12) condicion -> VARIABLE MENOR . expr
    (17) expr -> . expr MAS term
    (18) expr -> . expr MENOS term
    (19) expr -> . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 41
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 29

    (13) condicion -> VARIABLE MAYOR . expr
    (17) expr -> . expr MAS term
    (18) expr -> . expr MENOS term
    (19) expr -> . term
    (20) term -> . term MULTIPLICACION factor
    (21) term -> . term DIVISION factor
    (22) term -> . factor
    (23) factor -> . NUMERO_ENTERO
    (24) factor -> . NUMERO_FLOTANTE
    (25) factor -> . VARIABLE

    NUMERO_ENTERO   shift and go to state 15
    NUMERO_FLOTANTE shift and go to state 16
    VARIABLE        shift and go to state 10

    expr                           shift and go to state 42
    term                           shift and go to state 13
    factor                         shift and go to state 14

state 30

    (14) condicion -> VARIABLE error .

    PARENTESIS_DER  reduce using rule 14 (condicion -> VARIABLE error .)


state 31

    (17) expr -> expr MAS term .
    (20) term -> term . MULTIPLICACION factor
    (21) term -> term . DIVISION factor

    MAS             reduce using rule 17 (expr -> expr MAS term .)
    MENOS           reduce using rule 17 (expr -> expr MAS term .)
    VARIABLE        reduce using rule 17 (expr -> expr MAS term .)
    PALABRA_RESERVADA reduce using rule 17 (expr -> expr MAS term .)
    $end            reduce using rule 17 (expr -> expr MAS term .)
    PARENTESIS_DER  reduce using rule 17 (expr -> expr MAS term .)
    MULTIPLICACION  shift and go to state 21
    DIVISION        shift and go to state 22


state 32

    (18) expr -> expr MENOS term .
    (20) term -> term . MULTIPLICACION factor
    (21) term -> term . DIVISION factor

    MAS             reduce using rule 18 (expr -> expr MENOS term .)
    MENOS           reduce using rule 18 (expr -> expr MENOS term .)
    VARIABLE        reduce using rule 18 (expr -> expr MENOS term .)
    PALABRA_RESERVADA reduce using rule 18 (expr -> expr MENOS term .)
    $end            reduce using rule 18 (expr -> expr MENOS term .)
    PARENTESIS_DER  reduce using rule 18 (expr -> expr MENOS term .)
    MULTIPLICACION  shift and go to state 21
    DIVISION        shift and go to state 22


state 33

    (20) term -> term MULTIPLICACION factor .

    MULTIPLICACION  reduce using rule 20 (term -> term MULTIPLICACION factor .)
    DIVISION        reduce using rule 20 (term -> term MULTIPLICACION factor .)
    MAS             reduce using rule 20 (term -> term MULTIPLICACION factor .)
    MENOS           reduce using rule 20 (term -> term MULTIPLICACION factor .)
    VARIABLE        reduce using rule 20 (term -> term MULTIPLICACION factor .)
    PALABRA_RESERVADA reduce using rule 20 (term -> term MULTIPLICACION factor .)
    $end            reduce using rule 20 (term -> term MULTIPLICACION factor .)
    PARENTESIS_DER  reduce using rule 20 (term -> term MULTIPLICACION factor .)


state 34

    (21) term -> term DIVISION factor .

    MULTIPLICACION  reduce using rule 21 (term -> term DIVISION factor .)
    DIVISION        reduce using rule 21 (term -> term DIVISION factor .)
    MAS             reduce using rule 21 (term -> term DIVISION factor .)
    MENOS           reduce using rule 21 (term -> term DIVISION factor .)
    VARIABLE        reduce using rule 21 (term -> term DIVISION factor .)
    PALABRA_RESERVADA reduce using rule 21 (term -> term DIVISION factor .)
    $end            reduce using rule 21 (term -> term DIVISION factor .)
    PARENTESIS_DER  reduce using rule 21 (term -> term DIVISION factor .)


state 35

    (15) bloque -> PARENTESIS_IZQ . programa PARENTESIS_DER
    (16) bloque -> PARENTESIS_IZQ . error
    (1) programa -> . instruccion
    (2) programa -> . programa instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) asignacion -> . VARIABLE ASIGNACION error
    (7) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    error           shift and go to state 44
    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    programa                       shift and go to state 43
    instruccion                    shift and go to state 2
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 36

    (7) ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .

    VARIABLE        reduce using rule 7 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)
    PALABRA_RESERVADA reduce using rule 7 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)
    $end            reduce using rule 7 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)
    PARENTESIS_DER  reduce using rule 7 (ciclo -> PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque .)


state 37

    (8) condicion -> VARIABLE MENOR_IGUAL expr .
    (17) expr -> expr . MAS term
    (18) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 8 (condicion -> VARIABLE MENOR_IGUAL expr .)
    MAS             shift and go to state 19
    MENOS           shift and go to state 20


state 38

    (9) condicion -> VARIABLE MAYOR_IGUAL expr .
    (17) expr -> expr . MAS term
    (18) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 9 (condicion -> VARIABLE MAYOR_IGUAL expr .)
    MAS             shift and go to state 19
    MENOS           shift and go to state 20


state 39

    (10) condicion -> VARIABLE IGUAL expr .
    (17) expr -> expr . MAS term
    (18) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 10 (condicion -> VARIABLE IGUAL expr .)
    MAS             shift and go to state 19
    MENOS           shift and go to state 20


state 40

    (11) condicion -> VARIABLE DIFERENTE expr .
    (17) expr -> expr . MAS term
    (18) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 11 (condicion -> VARIABLE DIFERENTE expr .)
    MAS             shift and go to state 19
    MENOS           shift and go to state 20


state 41

    (12) condicion -> VARIABLE MENOR expr .
    (17) expr -> expr . MAS term
    (18) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 12 (condicion -> VARIABLE MENOR expr .)
    MAS             shift and go to state 19
    MENOS           shift and go to state 20


state 42

    (13) condicion -> VARIABLE MAYOR expr .
    (17) expr -> expr . MAS term
    (18) expr -> expr . MENOS term

    PARENTESIS_DER  reduce using rule 13 (condicion -> VARIABLE MAYOR expr .)
    MAS             shift and go to state 19
    MENOS           shift and go to state 20


state 43

    (15) bloque -> PARENTESIS_IZQ programa . PARENTESIS_DER
    (2) programa -> programa . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . ciclo
    (5) asignacion -> . VARIABLE ASIGNACION expr
    (6) asignacion -> . VARIABLE ASIGNACION error
    (7) ciclo -> . PALABRA_RESERVADA PARENTESIS_IZQ condicion PARENTESIS_DER bloque

    PARENTESIS_DER  shift and go to state 45
    VARIABLE        shift and go to state 5
    PALABRA_RESERVADA shift and go to state 6

    instruccion                    shift and go to state 7
    asignacion                     shift and go to state 3
    ciclo                          shift and go to state 4

state 44

    (16) bloque -> PARENTESIS_IZQ error .

    VARIABLE        reduce using rule 16 (bloque -> PARENTESIS_IZQ error .)
    PALABRA_RESERVADA reduce using rule 16 (bloque -> PARENTESIS_IZQ error .)
    $end            reduce using rule 16 (bloque -> PARENTESIS_IZQ error .)
    PARENTESIS_DER  reduce using rule 16 (bloque -> PARENTESIS_IZQ error .)


state 45

    (15) bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .

    VARIABLE        reduce using rule 15 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)
    PALABRA_RESERVADA reduce using rule 15 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)
    $end            reduce using rule 15 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 15 (bloque -> PARENTESIS_IZQ programa PARENTESIS_DER .)

