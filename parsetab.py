
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION COMENTARIO DIVISION MAS MENOS MULTIPLICACION NUMERO_ENTERO NUMERO_FLOTANTE PARENTESIS_DER PARENTESIS_IZQ VARIABLEprograma : asignacion\n                | exprasignacion : VARIABLE ASIGNACION exprexpr : expr MAS term\n            | expr MENOS term\n            | termterm : term MULTIPLICACION factor\n            | term DIVISION factor\n            | factorfactor : PARENTESIS_IZQ expr PARENTESIS_DER\n              | NUMERO_ENTERO\n              | NUMERO_FLOTANTE\n              | VARIABLE'
    
_lr_action_items = {'VARIABLE':([0,7,10,11,12,13,14,],[4,16,16,16,16,16,16,]),'PARENTESIS_IZQ':([0,7,10,11,12,13,14,],[7,7,7,7,7,7,7,]),'NUMERO_ENTERO':([0,7,10,11,12,13,14,],[8,8,8,8,8,8,8,]),'NUMERO_FLOTANTE':([0,7,10,11,12,13,14,],[9,9,9,9,9,9,9,]),'$end':([1,2,3,4,5,6,8,9,16,17,18,19,20,21,22,],[0,-1,-2,-13,-6,-9,-11,-12,-13,-4,-5,-3,-7,-8,-10,]),'MAS':([3,4,5,6,8,9,15,16,17,18,19,20,21,22,],[10,-13,-6,-9,-11,-12,10,-13,-4,-5,10,-7,-8,-10,]),'MENOS':([3,4,5,6,8,9,15,16,17,18,19,20,21,22,],[11,-13,-6,-9,-11,-12,11,-13,-4,-5,11,-7,-8,-10,]),'ASIGNACION':([4,],[12,]),'MULTIPLICACION':([4,5,6,8,9,16,17,18,20,21,22,],[-13,13,-9,-11,-12,-13,13,13,-7,-8,-10,]),'DIVISION':([4,5,6,8,9,16,17,18,20,21,22,],[-13,14,-9,-11,-12,-13,14,14,-7,-8,-10,]),'PARENTESIS_DER':([5,6,8,9,15,16,17,18,20,21,22,],[-6,-9,-11,-12,22,-13,-4,-5,-7,-8,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'asignacion':([0,],[2,]),'expr':([0,7,12,],[3,15,19,]),'term':([0,7,10,11,12,],[5,5,17,18,5,]),'factor':([0,7,10,11,12,13,14,],[6,6,6,6,6,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> asignacion','programa',1,'p_programa','analizadorSintactico.py',55),
  ('programa -> expr','programa',1,'p_programa','analizadorSintactico.py',56),
  ('asignacion -> VARIABLE ASIGNACION expr','asignacion',3,'p_asignacion','analizadorSintactico.py',60),
  ('expr -> expr MAS term','expr',3,'p_expr','analizadorSintactico.py',64),
  ('expr -> expr MENOS term','expr',3,'p_expr','analizadorSintactico.py',65),
  ('expr -> term','expr',1,'p_expr','analizadorSintactico.py',66),
  ('term -> term MULTIPLICACION factor','term',3,'p_term','analizadorSintactico.py',73),
  ('term -> term DIVISION factor','term',3,'p_term','analizadorSintactico.py',74),
  ('term -> factor','term',1,'p_term','analizadorSintactico.py',75),
  ('factor -> PARENTESIS_IZQ expr PARENTESIS_DER','factor',3,'p_factor','analizadorSintactico.py',82),
  ('factor -> NUMERO_ENTERO','factor',1,'p_factor','analizadorSintactico.py',83),
  ('factor -> NUMERO_FLOTANTE','factor',1,'p_factor','analizadorSintactico.py',84),
  ('factor -> VARIABLE','factor',1,'p_factor','analizadorSintactico.py',85),
]
